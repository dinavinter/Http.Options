name: Release
on:
  workflow_dispatch:
  push:
    branches:
      - "beta"
      - "prerelease"
env:
  PROJECT_PATH: 'Http.Client.Options/Http.Client.Options.csproj'
  PACKAGE_OUTPUT_DIRECTORY: ${{ github.workspace }}/output
  NUGET_PUSH_URL: ${{ secrets.NUGET_PUSH_URL }}
  NUGET_TOKEN: ${{ secrets.NUGET_TOKEN }}
  DOTNET_VERSION: '6.0.x' 

jobs:
  
  release:
    name: Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Install dependencies
        run: dotnet restore
      
      - name: Semantic Release
        id: release
        uses: cycjimmy/semantic-release-action@v3 
        with:
          # You can specify specifying version range for the extra plugins if you prefer.
          extra_plugins: |
            @droidsolutions-oss/semantic-release-update-file
            @droidsolutions-oss/semantic-release-nuget
            @semantic-release/git
            @semantic-release/github
            @semantic-release/exec


        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NUGET_TOKEN: ${{ secrets.NUGET_TOKEN }}
     
#      - name: Install dependencies
#        run: dotnet restore
#
#      - name: Build
#        run: dotnet build --configuration Release --no-restore
#          
#          
          
          # - name: 'Pack & Publish project'
      #   if: ${{ steps.release.outputs.new_release_version }}
      #   run: |
      #     dotnet clean
      #     dotnet pack ${{ env.PROJECT_PATH }} --configuration Release --include-symbols --output ${{ env.PACKAGE_OUTPUT_DIRECTORY }}
      #     dotnet nuget push ${{ env.PACKAGE_OUTPUT_DIRECTORY }}/*.nupkg -k ${{ secrets.NUGET_TOKEN }} -s ${{ env.NUGET_PUSH_URL }}

                    
